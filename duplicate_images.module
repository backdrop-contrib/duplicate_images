<?php

/**
 * @file
 * Contains the modules hooks and main functions.
 */

/**
 * Implements hook_help().
 */
function duplicate_help($path) {
  switch ($path) {
    // Main module help for this module
    case 'admin/help#duplicate_images':
      return '<p>' . t('This module allows and administrator to find and remove duplicate images, thereby updating references to duplicate images to point to their original. See the readme.txt for a detailed explanation.') . '</p>';

  }
  return NULL;
}

/**
 * Implements hook_permission().
 */
function duplicate_images_permission() {
  return array(
    'use duplicate images' => array(
      'title' => t('Use the duplicate images module'),
      'description' => t('Run the find and remove duplicate images forms.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function duplicate_images_menu() {
  $items = array();
  $items['admin/config/media/duplicate-images'] = array(
    'title' => 'Duplicate Images',
    'description' => 'Find and remove duplicate images',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('duplicate_images_get_form'),
    'access arguments' => array('use duplicate images'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Callback for drupal_get_form() that builds the Duplicate Images form.
 *
 * @param array[] $form
 * @param array $form_state
 *
 * @return array[]
 *   The form.
 */
function duplicate_images_get_form(array $form, array &$form_state) {
  $step = DuplicateImagesBaseForm::getStep();
  $form_class = duplicate_images_get_form_class($step);
  $form = $form_class->fields($form, $form_state);
  return $form;
}

/**
 * Callback for drupal_get_form() that builds the Duplicate Images form.
 *
 * On submit we have to execute the submit handler of the previous step. This
 * way we could keep the fields and processing of it together in 1 class.
 *
 * @param array $form
 *   The form.
 * @param array $form_state
 *   The form state. Passed by reference, thus can be used to store intermediate
 *   results.
 */
function duplicate_images_get_form_submit(array $form, array &$form_state) {
  $step = DuplicateImagesBaseForm::getPrev(DuplicateImagesBaseForm::getStep());
  $form_class = duplicate_images_get_form_class($step);
  $form_class->submit($form, $form_state);
}

/**
 * Creates the form class for the given step.
 *
 * @param string $step
 *
 * @return DuplicateImagesBaseForm
 *
 * @throws InvalidArgumentException
 */
function duplicate_images_get_form_class($step) {
  static $classes = array();

  if (!isset($classes[$step])) {
    $steps = DuplicateImagesBaseForm::getSteps();
    if (!array_key_exists($step, $steps)) {
      // Oops, don't play with us.
      throw new InvalidArgumentException("Unknown operation");
    }
    $class = 'DuplicateImages' . ucfirst($step);
    $classes[$step] = new $class();
  }
  return $classes[$step];
}
